(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    129148,       2342]
NotebookOptionsPosition[    127977,       2303]
NotebookOutlinePosition[    128321,       2318]
CellTagsIndexPosition[    128278,       2315]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "spell"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "spell1"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6331394694195795`*^9, 3.633139470743655*^9}, {
  3.63314048086143*^9, 3.6331404812324514`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6331385669249597`*^9, 3.633138581779809*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"ParametricNDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{"y", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{
        RowBox[{"m", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], "^", "2"}]}], ")"}], "*", 
         RowBox[{"y", "[", "t", "]"}]}], "-", 
        RowBox[{"x", "[", "t", "]"}], "+", 
        RowBox[{"d", "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"w", "*", "t"}], "]"}]}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "300", ",", "400"}], "}"}], ",", 
    RowBox[{"{", "w", "}"}], ",", 
    RowBox[{"Method", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<IndexReduction\>\"", "->", "Automatic"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6331405713666067`*^9, 3.6331405969190683`*^9}, {
   3.633140631446043*^9, 3.6331407675258265`*^9}, {3.633140808862191*^9, 
   3.633140831541488*^9}, 3.633140938733619*^9, {3.6331409714694915`*^9, 
   3.6331409715654974`*^9}, {3.6331410303338585`*^9, 3.633141039222367*^9}, {
   3.633141070238141*^9, 3.6331410885421877`*^9}, {3.633141140886182*^9, 
   3.633141141054191*^9}, {3.633141353390336*^9, 3.633141393949656*^9}, {
   3.633141439927286*^9, 3.633141461318509*^9}, {3.6331415314785223`*^9, 
   3.6331415502065935`*^9}, {3.633141618752514*^9, 3.6331416269829845`*^9}, {
   3.6331416684303555`*^9, 3.6331416755747643`*^9}, {3.633141741854555*^9, 
   3.633141742046566*^9}, {3.6331418011749477`*^9, 3.6331418013259563`*^9}, {
   3.6331418592062674`*^9, 3.633141859567288*^9}, {3.633142392990798*^9, 
   3.633142393102804*^9}, {3.6331424719913163`*^9, 3.633142493719559*^9}, {
   3.6331431234245763`*^9, 3.633143130759996*^9}, {3.633143219976099*^9, 
   3.6331432227432575`*^9}, {3.633143294936386*^9, 3.6331433040799093`*^9}, {
   3.63314348994454*^9, 3.633143536832222*^9}, {3.633143585696017*^9, 
   3.6331435974006863`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ParametricFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                    0.0874367476365131, 0.08197166587636243}, {
                    0.18222810297558026`, 0.1358255024317191}, {
                    0.27073779576926765`, 0.13315455086535802`}, {
                    0.3575112797365835, 0.08143316377978886}, {
                    0.4516394623155443, -0.007347854733426912}, {
                    0.5394859823491253, -0.08816932746972758}, {
                    0.6346872009943513, -0.13787329990112937`}, {
                    0.7281522108132057, -0.12816574147938434`}, {
                    0.8153355580866803, -0.07001063326902106}, {
                    0.9098736039718, 0.02121659675083076}, {
                    0.9999999090909091, 0.10024804094746914`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                    0.0874367476365131, 0.08090369567458766}, {
                    0.18222810297558026`, 0.12746559200130417`}, {
                    0.27073779576926765`, 0.1116266937044405}, {
                    0.3575112797365835, 0.046963725126600256`}, {
                    0.4516394623155443, -0.04509050859182233}, {
                    0.5394859823491253, -0.11115559892361665`}, {
                    0.6346872009943513, -0.12642564594664163`}, {
                    0.7281522108132057, -0.07740196037964171}, {
                    0.8153355580866803, 0.004179083230780074}, {
                    0.9098736039718, 0.08937493944143977}, {
                    0.9999999090909091, 0.12834702174618903`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                    0.0874367476365131, 0.07984396759533968}, {
                    0.18222810297558026`, 0.11939549826670079`}, {
                    0.27073779576926765`, 0.09184904274707059}, {
                    0.3575112797365835, 0.017913117173780694`}, {
                    0.4516394623155443, -0.07109962300031061}, {
                    0.5394859823491253, -0.11717052830989395`}, {
                    0.6346872009943513, -0.09879571259704382}, {
                    0.7281522108132057, -0.022693471356141894`}, {
                    0.8153355580866803, 0.06128703302641453}, {
                    0.9098736039718, 0.11605625481609519`}, {
                    0.9999999090909091, 0.10415981267620744`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                    0.0874367476365131, 0.07879243663407876}, {
                    0.18222810297558026`, 0.1116081822210312}, {
                    0.27073779576926765`, 0.07372482040530459}, {
                    0.3575112797365835, -0.006267252216927747}, {
                    0.4516394623155443, -0.08743897872291118}, {
                    0.5394859823491253, -0.11109134853087661`}, {
                    0.6346872009943513, -0.06371549528296311}, {
                    0.7281522108132057, 0.02544576624054603}, {
                    0.8153355580866803, 0.09464282937855747}, {
                    0.9098736039718, 0.10731931496853601`}, {
                    0.9999999090909091, 0.0516787429232188}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                    0.0874367476365131, 0.07774905743802465}, {
                    0.18222810297558026`, 0.10409673959866513`}, {
                    0.27073779576926765`, 0.05716133039337165}, {
                    0.3575112797365835, -0.026084496726167965`}, {
                    0.4516394623155443, -0.09591154799603378}, {
                    0.5394859823491253, -0.09685594593277226}, {
                    0.6346872009943513, -0.02730376120671303}, {
                    0.7281522108132057, 0.061646715198529656`}, {
                    0.8153355580866803, 0.1046634148537508}, {0.9098736039718,
                     0.07509702498429204}, {
                    0.9999999090909091, -0.006536873471333553}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                    0.0874367476365131, 0.07671378556951527}, {
                    0.18222810297558026`, 0.09685439581479163}, {
                    0.27073779576926765`, 0.042069810325321415`}, {
                    0.3575112797365835, -0.042006785469922474`}, {
                    0.4516394623155443, -0.09808544986431629}, {
                    0.5394859823491253, -0.07760167026270944}, {
                    0.6346872009943513, 0.0063643674428021085`}, {
                    0.7281522108132057, 0.08405712128907425}, {
                    0.8153355580866803, 0.09555213349985489}, {
                    0.9098736039718, 0.03202960165577907}, {
                    0.9999999090909091, -0.054402034659985464`}}]}}, 
                  AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                  GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                  DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {Automatic, Automatic}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["x", HoldForm], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "w", "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                    0.0874367476365131, 0.08197166587636243}, {
                    0.18222810297558026`, 0.1358255024317191}, {
                    0.27073779576926765`, 0.13315455086535802`}, {
                    0.3575112797365835, 0.08143316377978886}, {
                    0.4516394623155443, -0.007347854733426912}, {
                    0.5394859823491253, -0.08816932746972758}, {
                    0.6346872009943513, -0.13787329990112937`}, {
                    0.7281522108132057, -0.12816574147938434`}, {
                    0.8153355580866803, -0.07001063326902106}, {
                    0.9098736039718, 0.02121659675083076}, {
                    0.9999999090909091, 0.10024804094746914`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                    0.0874367476365131, 0.08090369567458766}, {
                    0.18222810297558026`, 0.12746559200130417`}, {
                    0.27073779576926765`, 0.1116266937044405}, {
                    0.3575112797365835, 0.046963725126600256`}, {
                    0.4516394623155443, -0.04509050859182233}, {
                    0.5394859823491253, -0.11115559892361665`}, {
                    0.6346872009943513, -0.12642564594664163`}, {
                    0.7281522108132057, -0.07740196037964171}, {
                    0.8153355580866803, 0.004179083230780074}, {
                    0.9098736039718, 0.08937493944143977}, {
                    0.9999999090909091, 0.12834702174618903`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                    0.0874367476365131, 0.07984396759533968}, {
                    0.18222810297558026`, 0.11939549826670079`}, {
                    0.27073779576926765`, 0.09184904274707059}, {
                    0.3575112797365835, 0.017913117173780694`}, {
                    0.4516394623155443, -0.07109962300031061}, {
                    0.5394859823491253, -0.11717052830989395`}, {
                    0.6346872009943513, -0.09879571259704382}, {
                    0.7281522108132057, -0.022693471356141894`}, {
                    0.8153355580866803, 0.06128703302641453}, {
                    0.9098736039718, 0.11605625481609519`}, {
                    0.9999999090909091, 0.10415981267620744`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                    0.0874367476365131, 0.07879243663407876}, {
                    0.18222810297558026`, 0.1116081822210312}, {
                    0.27073779576926765`, 0.07372482040530459}, {
                    0.3575112797365835, -0.006267252216927747}, {
                    0.4516394623155443, -0.08743897872291118}, {
                    0.5394859823491253, -0.11109134853087661`}, {
                    0.6346872009943513, -0.06371549528296311}, {
                    0.7281522108132057, 0.02544576624054603}, {
                    0.8153355580866803, 0.09464282937855747}, {
                    0.9098736039718, 0.10731931496853601`}, {
                    0.9999999090909091, 0.0516787429232188}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                    0.0874367476365131, 0.07774905743802465}, {
                    0.18222810297558026`, 0.10409673959866513`}, {
                    0.27073779576926765`, 0.05716133039337165}, {
                    0.3575112797365835, -0.026084496726167965`}, {
                    0.4516394623155443, -0.09591154799603378}, {
                    0.5394859823491253, -0.09685594593277226}, {
                    0.6346872009943513, -0.02730376120671303}, {
                    0.7281522108132057, 0.061646715198529656`}, {
                    0.8153355580866803, 0.1046634148537508}, {0.9098736039718,
                     0.07509702498429204}, {
                    0.9999999090909091, -0.006536873471333553}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                    0.0874367476365131, 0.07671378556951527}, {
                    0.18222810297558026`, 0.09685439581479163}, {
                    0.27073779576926765`, 0.042069810325321415`}, {
                    0.3575112797365835, -0.042006785469922474`}, {
                    0.4516394623155443, -0.09808544986431629}, {
                    0.5394859823491253, -0.07760167026270944}, {
                    0.6346872009943513, 0.0063643674428021085`}, {
                    0.7281522108132057, 0.08405712128907425}, {
                    0.8153355580866803, 0.09555213349985489}, {
                    0.9098736039718, 0.03202960165577907}, {
                    0.9999999090909091, -0.054402034659985464`}}]}}, 
                  AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                  GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                  DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {Automatic, Automatic}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["x", HoldForm], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "w", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Generator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["ParametricNDSolve", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Dependent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Independent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "t", "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ParametricFunction[<>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"y", "\[Rule]", 
    TagBox[
     TemplateBox[{RowBox[{
         StyleBox[
          TagBox["ParametricFunction", "SummaryHead"], 
          "NonInterpretableSummary"], 
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open$$ = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                    0.0874367476365131, 0.08197166587636243}, {
                    0.18222810297558026`, 0.1358255024317191}, {
                    0.27073779576926765`, 0.13315455086535802`}, {
                    0.3575112797365835, 0.08143316377978886}, {
                    0.4516394623155443, -0.007347854733426912}, {
                    0.5394859823491253, -0.08816932746972758}, {
                    0.6346872009943513, -0.13787329990112937`}, {
                    0.7281522108132057, -0.12816574147938434`}, {
                    0.8153355580866803, -0.07001063326902106}, {
                    0.9098736039718, 0.02121659675083076}, {
                    0.9999999090909091, 0.10024804094746914`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                    0.0874367476365131, 0.08090369567458766}, {
                    0.18222810297558026`, 0.12746559200130417`}, {
                    0.27073779576926765`, 0.1116266937044405}, {
                    0.3575112797365835, 0.046963725126600256`}, {
                    0.4516394623155443, -0.04509050859182233}, {
                    0.5394859823491253, -0.11115559892361665`}, {
                    0.6346872009943513, -0.12642564594664163`}, {
                    0.7281522108132057, -0.07740196037964171}, {
                    0.8153355580866803, 0.004179083230780074}, {
                    0.9098736039718, 0.08937493944143977}, {
                    0.9999999090909091, 0.12834702174618903`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                    0.0874367476365131, 0.07984396759533968}, {
                    0.18222810297558026`, 0.11939549826670079`}, {
                    0.27073779576926765`, 0.09184904274707059}, {
                    0.3575112797365835, 0.017913117173780694`}, {
                    0.4516394623155443, -0.07109962300031061}, {
                    0.5394859823491253, -0.11717052830989395`}, {
                    0.6346872009943513, -0.09879571259704382}, {
                    0.7281522108132057, -0.022693471356141894`}, {
                    0.8153355580866803, 0.06128703302641453}, {
                    0.9098736039718, 0.11605625481609519`}, {
                    0.9999999090909091, 0.10415981267620744`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                    0.0874367476365131, 0.07879243663407876}, {
                    0.18222810297558026`, 0.1116081822210312}, {
                    0.27073779576926765`, 0.07372482040530459}, {
                    0.3575112797365835, -0.006267252216927747}, {
                    0.4516394623155443, -0.08743897872291118}, {
                    0.5394859823491253, -0.11109134853087661`}, {
                    0.6346872009943513, -0.06371549528296311}, {
                    0.7281522108132057, 0.02544576624054603}, {
                    0.8153355580866803, 0.09464282937855747}, {
                    0.9098736039718, 0.10731931496853601`}, {
                    0.9999999090909091, 0.0516787429232188}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                    0.0874367476365131, 0.07774905743802465}, {
                    0.18222810297558026`, 0.10409673959866513`}, {
                    0.27073779576926765`, 0.05716133039337165}, {
                    0.3575112797365835, -0.026084496726167965`}, {
                    0.4516394623155443, -0.09591154799603378}, {
                    0.5394859823491253, -0.09685594593277226}, {
                    0.6346872009943513, -0.02730376120671303}, {
                    0.7281522108132057, 0.061646715198529656`}, {
                    0.8153355580866803, 0.1046634148537508}, {0.9098736039718,
                     0.07509702498429204}, {
                    0.9999999090909091, -0.006536873471333553}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                    0.0874367476365131, 0.07671378556951527}, {
                    0.18222810297558026`, 0.09685439581479163}, {
                    0.27073779576926765`, 0.042069810325321415`}, {
                    0.3575112797365835, -0.042006785469922474`}, {
                    0.4516394623155443, -0.09808544986431629}, {
                    0.5394859823491253, -0.07760167026270944}, {
                    0.6346872009943513, 0.0063643674428021085`}, {
                    0.7281522108132057, 0.08405712128907425}, {
                    0.8153355580866803, 0.09555213349985489}, {
                    0.9098736039718, 0.03202960165577907}, {
                    0.9999999090909091, -0.054402034659985464`}}]}}, 
                  AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                  GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                  DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {Automatic, Automatic}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["y", HoldForm], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "w", "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 GraphicsBox[{{}, {}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                    0.0874367476365131, 0.08197166587636243}, {
                    0.18222810297558026`, 0.1358255024317191}, {
                    0.27073779576926765`, 0.13315455086535802`}, {
                    0.3575112797365835, 0.08143316377978886}, {
                    0.4516394623155443, -0.007347854733426912}, {
                    0.5394859823491253, -0.08816932746972758}, {
                    0.6346872009943513, -0.13787329990112937`}, {
                    0.7281522108132057, -0.12816574147938434`}, {
                    0.8153355580866803, -0.07001063326902106}, {
                    0.9098736039718, 0.02121659675083076}, {
                    0.9999999090909091, 0.10024804094746914`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                    0.0874367476365131, 0.08090369567458766}, {
                    0.18222810297558026`, 0.12746559200130417`}, {
                    0.27073779576926765`, 0.1116266937044405}, {
                    0.3575112797365835, 0.046963725126600256`}, {
                    0.4516394623155443, -0.04509050859182233}, {
                    0.5394859823491253, -0.11115559892361665`}, {
                    0.6346872009943513, -0.12642564594664163`}, {
                    0.7281522108132057, -0.07740196037964171}, {
                    0.8153355580866803, 0.004179083230780074}, {
                    0.9098736039718, 0.08937493944143977}, {
                    0.9999999090909091, 0.12834702174618903`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                    0.0874367476365131, 0.07984396759533968}, {
                    0.18222810297558026`, 0.11939549826670079`}, {
                    0.27073779576926765`, 0.09184904274707059}, {
                    0.3575112797365835, 0.017913117173780694`}, {
                    0.4516394623155443, -0.07109962300031061}, {
                    0.5394859823491253, -0.11717052830989395`}, {
                    0.6346872009943513, -0.09879571259704382}, {
                    0.7281522108132057, -0.022693471356141894`}, {
                    0.8153355580866803, 0.06128703302641453}, {
                    0.9098736039718, 0.11605625481609519`}, {
                    0.9999999090909091, 0.10415981267620744`}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                    0.0874367476365131, 0.07879243663407876}, {
                    0.18222810297558026`, 0.1116081822210312}, {
                    0.27073779576926765`, 0.07372482040530459}, {
                    0.3575112797365835, -0.006267252216927747}, {
                    0.4516394623155443, -0.08743897872291118}, {
                    0.5394859823491253, -0.11109134853087661`}, {
                    0.6346872009943513, -0.06371549528296311}, {
                    0.7281522108132057, 0.02544576624054603}, {
                    0.8153355580866803, 0.09464282937855747}, {
                    0.9098736039718, 0.10731931496853601`}, {
                    0.9999999090909091, 0.0516787429232188}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                    0.0874367476365131, 0.07774905743802465}, {
                    0.18222810297558026`, 0.10409673959866513`}, {
                    0.27073779576926765`, 0.05716133039337165}, {
                    0.3575112797365835, -0.026084496726167965`}, {
                    0.4516394623155443, -0.09591154799603378}, {
                    0.5394859823491253, -0.09685594593277226}, {
                    0.6346872009943513, -0.02730376120671303}, {
                    0.7281522108132057, 0.061646715198529656`}, {
                    0.8153355580866803, 0.1046634148537508}, {0.9098736039718,
                     0.07509702498429204}, {
                    0.9999999090909091, -0.006536873471333553}}]}, {
                    GrayLevel[0.55], 
                    AbsoluteThickness[1.5], 
                    Opacity[1.], 
                    
                    LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                    0.0874367476365131, 0.07671378556951527}, {
                    0.18222810297558026`, 0.09685439581479163}, {
                    0.27073779576926765`, 0.042069810325321415`}, {
                    0.3575112797365835, -0.042006785469922474`}, {
                    0.4516394623155443, -0.09808544986431629}, {
                    0.5394859823491253, -0.07760167026270944}, {
                    0.6346872009943513, 0.0063643674428021085`}, {
                    0.7281522108132057, 0.08405712128907425}, {
                    0.8153355580866803, 0.09555213349985489}, {
                    0.9098736039718, 0.03202960165577907}, {
                    0.9999999090909091, -0.054402034659985464`}}]}}, 
                  AspectRatio -> 1, Axes -> {False, False}, 
                  AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                  GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                  DisplayFunction -> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Thickness[Tiny], 
                    GrayLevel[0.7]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> {Automatic, 
                    Dynamic[
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])]}, LabelStyle -> {FontFamily -> "Arial"}, 
                  Method -> {"ScalingFunctions" -> None}, 
                  PlotRange -> {All, All}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {Automatic, Automatic}, 
                  Ticks -> {Automatic, Automatic}], 
                 GridBox[{{
                    RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox["y", HoldForm], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "w", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Generator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["ParametricNDSolve", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Dependent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    "\"Independent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "t", "}"}], "SummaryItem"]}]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               BaselinePosition -> {1, 1}]}, 
            Dynamic[Typeset`open$$], ImageSize -> Automatic], 
           BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("ParametricFunction[<>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6331405726386795`*^9, 3.633140598153139*^9}, 
   3.6331407731451483`*^9, {3.6331408172336698`*^9, 3.6331408394619412`*^9}, 
   3.633140939236648*^9, 3.6331409720315237`*^9, 3.6331410401064177`*^9, {
   3.63314107162422*^9, 3.63314108910822*^9}, 3.633141160217287*^9, {
   3.633141354736413*^9, 3.633141394401682*^9}, {3.6331414548311386`*^9, 
   3.6331414619485455`*^9}, {3.6331415346487036`*^9, 
   3.6331415509996386`*^9}, {3.6331416202716007`*^9, 3.63314162811405*^9}, 
   3.633141676253803*^9, {3.6331417773555856`*^9, 3.633141801822985*^9}, 
   3.6331418603513327`*^9, 3.6331419857895074`*^9, 3.6331423938468466`*^9, {
   3.63314247852569*^9, 3.633142495517662*^9}, 3.633142687294631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "w", "]"}], "[", "t", "]"}], "/.", "sol"}], ",", 
      RowBox[{"{", 
       RowBox[{"w", ",", 
        RowBox[{"{", 
         RowBox[{"20", ",", "5", ",", "2", ",", "1.788", ",", "1"}], "}"}]}], 
       "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "300", ",", "400"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6331417303428965`*^9, 3.633141772334298*^9}, {
  3.6331418219991393`*^9, 3.633141822959194*^9}, {3.6331418653346176`*^9, 
  3.6331418822545853`*^9}, {3.6331419960950966`*^9, 3.6331420152711935`*^9}, {
  3.633142078062785*^9, 3.6331420893264294`*^9}, {3.633143239264202*^9, 
  3.633143247759688*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricNDSolve", "::", "ndcf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Repeated convergence test failure at \
\[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \
\[NoBreak]\\!\\(0.0812363476480965`\\)\[NoBreak]; unable to continue. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ParametricNDSolve/ndcf\\\", ButtonNote -> \
\\\"ParametricNDSolve::ndcf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142689827776*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricNDSolve", "::", "ndcf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Repeated convergence test failure at \
\[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \
\[NoBreak]\\!\\(0.0812363476480965`\\)\[NoBreak]; unable to continue. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ParametricNDSolve/ndcf\\\", ButtonNote -> \
\\\"ParametricNDSolve::ndcf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142689842777*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve`ProcessSolutions", "::", "nodata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No solution data was computed between \
\[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \[NoBreak]\\!\\(300.`\\)\[NoBreak] \
and \[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \[NoBreak]\\!\\(400.`\\)\
\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142689912781*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricNDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \
\[NoBreak]\\!\\(0.3232657338416002`\\)\[NoBreak], step size is effectively \
zero; singularity or stiff system suspected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ParametricNDSolve/ndsz\\\", ButtonNote -> \
\\\"ParametricNDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142689933782*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricNDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \
\[NoBreak]\\!\\(0.3232657338416002`\\)\[NoBreak], step size is effectively \
zero; singularity or stiff system suspected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ParametricNDSolve/ndsz\\\", ButtonNote -> \
\\\"ParametricNDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142689946783*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve`ProcessSolutions", "::", "nodata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No solution data was computed between \
\[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \[NoBreak]\\!\\(300.`\\)\[NoBreak] \
and \[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \[NoBreak]\\!\\(400.`\\)\
\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.6331426900167866`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricNDSolve", "::", "ndsz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"At \[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \
\[NoBreak]\\!\\(1.0004209478182764`\\)\[NoBreak], step size is effectively \
zero; singularity or stiff system suspected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ParametricNDSolve/ndsz\\\", ButtonNote -> \
\\\"ParametricNDSolve::ndsz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142690037788*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ParametricNDSolve :: ndsz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.6331426900497885`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NDSolve`ProcessSolutions", "::", "nodata"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"No solution data was computed between \
\[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \[NoBreak]\\!\\(300.`\\)\[NoBreak] \
and \[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \[NoBreak]\\!\\(400.`\\)\
\[NoBreak].\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142690119793*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(NDSolve`ProcessSolutions :: nodata\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.6331426901347933`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ParametricNDSolve", "::", "ndcf"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Repeated convergence test failure at \
\[NoBreak]\\!\\(t$782294\\)\[NoBreak] == \
\[NoBreak]\\!\\(0.0812363476480965`\\)\[NoBreak]; unable to continue. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/ParametricNDSolve/ndcf\\\", ButtonNote -> \
\\\"ParametricNDSolve::ndcf\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.6331426901847963`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(ParametricNDSolve :: ndcf\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.633142498908856*^9, {3.633142682838376*^9, 3.633142690199797*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}, {}, {}, {}, 
   {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
w9U0Mly95+hH5EdtQFmajjSNZBYe1uZFvll9P2FSDMtJHL5TAPfu4p7atgbx
cfEPrz2VnysP7FVeSyPruTI2PEf+bnswMLdWhkZ+ljbreCK/M1oFD3NvoJFN
4Q/eNKCfb9F+zh4Gvyy83MRAP39x62gumzziU73SRAz9vMP1/uK/sHfi2slj
qC/L2UnhLwUaOdVQEjGAfp52utf+zCYa4ToqXa6KeqTwLpKvH86xUEwOgHcm
f3T4okgjrcLDE3yoZwGbzwh82Ewjie+ue4mg/i1J4H9hpkwjJ3UPT1rCSXMF
zvXwqfnm5Hg4v5qlonoLjXSqJgpzoX7qKdxx1VehkZTcjy06cGPcbpFyuDrT
KIQG/7RJ8ChSxc+XvfRqgb0rNMXVttJQ/+TS2VG/OeW+vH4MX/JnRG2G4y+G
0ZTUaCTiNtlkTdX/8Y2S2XCGrKJvEJxr1VQrt41GBnYYnb4Da5cxmZnwGt+k
sRpqPoh4WZ+mTiPlaSSfE/2l75ejj9h2GgmuV+ii+g/twBKZRFjlUnqIBtXP
nuc1CmrQyMTM61tmcIyk5dk42PbYh60OsPj5v+uXatIIx8rxbQz4/uDN5ki4
ZQNvBtUP1c2Mzy3WopH/nt5lXoKrCobkQ2HVOdGcRNhC7HILizaNXDhUsDMd
7gncFuwPD8nXGdyG3fo6N83CCtqVN6j++3d3cDtTh0Y0GMU21M8j89afH4cF
P73xof6/kFD9Zg9dGvnjzz1DvX7GWa/OIVjKNf4T9f5bvgqFnyY0srZJdG0o
PDXWXDkKzzhcD6DmlaJFsazeO5BPHGbN9vBZwT06C/D19gLZPTCR4fIL06OR
VSv0A1RgdrXKp3z6NPJ1pdNnIWqeMQqciIeH/quxmMHxjrTUUhY3oBHhlIYv
rbCp07TrbXj31+9Xn8ArfPLvyxvSyI/bwd7R8McIjx958J61t+OPwzYP+o+V
G6F+//1yn5Pq5yUZ142NaUQ551/pB8TLt7fHOhrghhc3dG5Q8+Ovtv1dO1Hv
5JurlWDFhfhYh100YnrXbXgc8fl7mXn9T3gV1+SLAthb+Y3RrAmNLJK8m7cF
DqMXbRfaSyPZ5eVNAoh/k/MMZhp8zTT9xGvkB1+C8hMZUxpZbs3Q9oHjn95T
UN2HeLBata4N+XVrNknS3JxGxvWmXHiQf468h2za4GaNyRVHkJ8bxFckHbXA
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
VGyfmIKlZDyFNdCf/gd/Pv3n
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{300., 0.996},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.633141773203348*^9, 3.633141884352706*^9}, {
   3.6331419893877134`*^9, 3.633142017266308*^9}, {3.6331420829850664`*^9, 
   3.633142101711138*^9}, 3.6331424006942387`*^9, {3.633142480675813*^9, 
   3.633142500536949*^9}, {3.6331426828953795`*^9, 3.6331426914618697`*^9}}]
}, Open  ]],

Cell["\<\
Only \[Omega]=1 has solutions in that region out of the given values for \
\[Omega].\
\>", "Text",
 CellChangeTimes->{{3.6331420198514557`*^9, 3.633142052061298*^9}, {
  3.6331423466541476`*^9, 3.63314236645428*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "t", "]"}], "/.", "sol"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "[", "1", "]"}], "[", "t", "]"}], "/.", "sol"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "300", ",", "400"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{"AspectRatio", " ", "->", " ", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633142702885523*^9, 3.6331427382785473`*^9}, {
  3.633142793550709*^9, 3.6331428592554665`*^9}, {3.63314289043125*^9, 
  3.633142896831616*^9}, {3.6331429341117487`*^9, 3.633143014687357*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
VoXxZSgzRL+f4t1UxRrHl4hX3lVaB+G0CeFjLXCBw5kvwhhPyiO5oh+qUd8q
Vot7wX8Gp3va1aDf3tX2vhR+1mf9sBG23XzRn8X43Nbdv+nNK/Sbb94WCGB8
n2pROFxdi/rw5hb3ELr/78PBapM61J9FtXXdsEzTy4WV8O8Unf11qC/u1e7J
Lq9Hf859PLcQ86muLP1zSQPiU9D1us+Yn8szRQ2z36Her9eYovPXddsRSa33
+PP6eYtnY36n8XyffAr/ljobrDeKesA9p7DhA8bLToHX1xAf+KVNlUY/MmQ6
32kuW9QDA5eZxevaGeI/3pxN1xNWmbeOvoCVFr+7FEDjz/j6RsvP+Psxlvob
EJ86twue2d3BkA9PTytupvcBCl/nPt6Jfm/uzs2x8PwXs74IdDHk+caDozXw
5kC/0gS401gylt4HWNWw9mDGVzy/31ESooifRWfe9Fd/R73zMDhpEzymp/na
ppshJPiYOI2/6n3Jt1vhk69MZjTBWZs83ft+MCRGXdFqCu6eeG3A/kR/bfXS
l77vl7ujLsn5iyHnfa059tH131kcLfN68LwSV++Kgb8VuhUmwYsNl++9Ay/z
rE6Q6WWIo1Hs4kq6vr9IJSALXqAZ4kbXly9XJFhp9DHEZDfvhjG4KWhi1RN4
gNMzj5+uT8s68xv3M2SGQ3W2OGzSWNFd10/nv70SXc8+cUyxYvsAQ8yvNirQ
/QFlaufSO+B9ss9vGMHjHWPheweRXwqNk+j9RepxjruG4faKw7x0/8A+/XKd
/4YQXx5H/rKl6+P9KxbPGEb9vWqnEV1P/5oaOxoDa568PY/WB3KWv98u/I16
SzZyK83HnpP2D9Lg26zYfGP4TlZp7IoR9Ks/Y03p+4meHbI+D2Du71OTKnR9
gj/adO0o4s/Zh6rS9H1F0YBcOTxj8tuPuXCalx33pjGGbHc5rUjvY/ooUtLR
CPv8TuL4Di+okip1/IPx8n2mVy09j89GJH+DK3wkhuj6zJH92yZ8/qJ+vTZH
IxG+77XcYRg+5DO5lr6P+eQyVhgyDlcKCW6j5zF2Vi7inMDnnX34oTq933Fr
InMSXhmyZy19f+9puadJ4B/ieb7VzMcYDw36vPGLJ9GfnjX2jIMF1r4fTINV
jyg3usIb1DOs5KYwX90ipnHBd2SNZ6tzsGRO5JKVihifnnwRUZumsUSVY9yJ
1rOXuLZ1N8AvNAOF6P19L/7JGdtPZ0l9lbemLizYX8HtwcUSwfQQa01638Zb
nvCwGSy5mOyYNX0C8S3lJJMziyVbjwwm+6Fer7tg16TFxxJuGbP2FuTvtjNy
q0thK62Ef7Ten3G0YrCGnyX6XnPn7Mb8/e7Bs++rIEu2v/zJ8wrzW3L3uxrv
2SzpHGu+pAXb2N9cOQQ7+a6QW4B4UGm+sXtqDktS68Pkm9FvXFE56SoynyU5
81sMLeFKebtnqfBKHW3NF8jng9JyUrJCLPn+TVzzEeKNrXBFm+oClrh2Foc9
RjySGp/hYL6QJV6OXMYb4G3DTYVv4GM1HRz1iF+xPTcWbV/EEv8336v7kL9/
tW1ochNhydHP70W2Ih5eLz9hdXgJSxy8T/TT9YDYhh+ZE7BVS8XS2zDbYTEt
RJQlZ5UC2wVgR46FOQFiLJktXBlP71e3n32QbxCuzzfrO0TvFxZvc/EVx+//
c03TJOL5dJ2bQl4SLGnYZxNWTvt/Uz6fb7Dxe0nBGLh0u+9z16Usmaz2i3aA
U/c0iHXAbLsftyLsyqwJ2iXJkp/f/I5Ng+VPJL1ugQczHwu1IN/MOj8lay/F
ktV/tjwppP3vNZfD7+CWlrNRSTBXTsU7G2mWHL+y/79w+ufLViq/gWdJ9KTQ
9wVjdbERljIs+WAS8Hs7PNg21F4DB748d4zuR5/bZ6dluowlCtMFLA1g+cmi
sxWwxmia3TpYVGDpD0NZlnzU10jThXuXHFtfBsv5eS3Xh+Plv1/Sk2OJgWJI
nzFsoGU+VAxPF44dpuvlS42zzbSXsyRCwUfVDZ5uJ5SeD5ty37oaDHe4sRPq
K1giFWRG4uCnAS02D+Azz3fPuEf7+6MkS0meJennNPpr4cS4dO4s+C9fyO9h
+NwVXkf5lSzJyi/hF8fnF5XtnXcT5osLVTCj+fdJneAyBYwnnX3GobDDa3WP
q3Dzn9tb7sP6rYlPJBRZMjpvQP8HvPzXxMJkeHX6kxlyeN6zx538Fq9iyd7W
ssbb8NdFKyQXKGF+7jZ6PATXyp0OjoP19+/R0cP4eaQxUD9bmSVNv1LvtsMJ
NoVHZqngefDKa5hhfAqfMemcUmXJ6W98l7PgyZQsnf/UWHJjVWjPPIznr1lz
z/+FQ46s6qf7Wx5WfzD6rc6SU+dkM2+hnvXj8br5Q4MlROiNQ8IQff8R5dWo
zZJE1fDRZcjPgoTbZudaljzOKOzMg705w3S7YDJoPb8F85PzWOCc3zosWXu8
Vl0J9bl5pFOekB5LFmkV3m+YoPcHa0yzMWDJqhuJ31zRz++3vf/zI1zaYPx2
GC4VVmh0MWRJz9rd6nOQn89clMw4YMSSq2dYx0TEH75UfotzG/E8l8Zmf4Dd
nE6uWWLMEvfUZ89E6H5lyWmS12DH5Tpf6X5l3/TRoQcmLElONFofivj3MbPj
4hszlkRJZz25D6vv3XnU3pwlof/VhnTBMQrvvTtgTtO/vhsRP9ffe6U3uAnj
O/BwbCB82c94RYgFS2KmNz+k67EjKs/mTbNk0U8Jf6Pft3Irt6Br7maWeN9O
+iiC+M0VpFZ7EfZ6Y5CpCzuuuVsgacUSk35mwy66n3ts+dVMuEZr5a1D8JxH
106pWOPnuSxSTd/Xex0UDyyEjwvrpuXB5ToXHfW3sMT66CFpmn8kJucbV8En
bEQs6X4+9kmMipUN4vm4sdgf+E3YzCUf4PwfxhGz6H769ce4dtuy5F+cTZQI
zd/Tp3q+wwIXWsVkuel9ssHv/LayZN/ThYR+/5D2ieHSMbjY4mzfGjh+o++t
MDuW5HF+kKfnBXp5f5zj3cYSseT/+vVg45eu/52BLyrw6hH46qk290XbWXI3
RnEBzccT5vab02D/oaQALbqfT7BRa7k9S2wG3uxSpfm71lI6G64Ut/5A9xtw
n33Jr+nAEr15F7+IctP7aY1GnsAWI7PCBen7g/mlbRt3IL5ZPcil/fT8Ru2q
Wrh3RUIrfT8ic8fkjsVOxGdd75F3sMbRbbGvYAlrZ64yeKO9h7+5I+LNqhv8
t+h5SJUg22o4vn+nEP2+vD28xzVNd7Hkzx8HSfp+hm07t6QK1jti4aVB+/HT
9z+/cGJJxw2FPHo/z23X0nKj3Sy5X9stO0Drv7W1N8th43uNien0/sjuXz5l
zixRFJ1z9yDcVTq+Wd+FJUUeRYJ0P8jAhVnqpXDEa5GWEbpfdMPyvyWuLNlf
LbOTrictFVvTquPGkgM3Am0SYLVho9IieKsQ13slePtVlxOF7iyRbrVMssb4
T5lMmfdwD0sOT61toffzLMxfsPKON+KN+wbGAJaPkRFc6cMStfpd1Y8x//Tc
1AYyYfPP75c+wHx1nW+Vf3MfSw6J10jGIp/n+UYbXPNDfuNgJAny8+zl03dc
CsB8VCb/8jH/pabm6okEsuRIf/otZXh101KpRLjzojknjR/bj637fj4I49FV
Y50Yvc+nPTjgLMuSezNdjVKRr/PzI+zmBLMkTL1AUpqe/425oB0Lx7/71KiM
/H1Z5yHH6RCW6Epd3u7RS88L9kdHhLLELejqjn+IZwKPPAe4/mOJOP+LyfOw
2ccO23DY8IZdaC3ioZZ4o3jIIXz+D7Yf94N36lkcHYFvfi2IEoJtnCq++R9m
ieg1t+9uyO83rxRm7w3DfAse9JxPz/OVqS74Dm+qL9UtR/zd8+V2sGs44k14
7gJl2H1ZyvqdR1iyxH+l9k/Eb9cNC29+gJU/7OjPpN8X6HGGb+tR5IM8Zhft
z9jMI28tjqEeeGqoNoH8EPZyXLMa1juu/LYKPvozIHnjcZbwM1HmSTSf8/dy
lsP2gRE3/WAVRQ93coIl6+KT+un7AXGL9pfFsLEFp6oczfe+25W0TrKE49/g
fl7Y/sybcw/hI+Z/83qQ32Lum42pROD5JmTz0P1kKW/Kd9yF43cUe5XD2UO6
T+UjWWJ5u/ML7fc/CeUvuwlXpzwOvE3XvzWUo6SjEL9M+qTofgJeu8zeVHjA
5UXPVbiNkdoieoolz5TWNqXTfy8xKT8RNlTv/HgL9igUEl0QzRKhrsp/ubBv
8+mws/DZ5cNrnsFnx2d0CZxmyX+BSica4SLRMJMo+Erg1s6f9Lyb7p+sGTH4
+85mFnT/Y7uj/7yjcEmIeQnd/yAV9jNoCs5bK7xiI7zziuvHg7Es+dawP9IH
9ixr1RuDPQb8m+j5d+0vW9MDzqAeS67mfgHXTK/jHYCN7Y/wj8HRMiY+PmdZ
Eucp20bf35wxKqvvhgM0JH094Ez3tRrucch/ZCgrHX51MvdSB8zX/WtyBcbH
76obLh/Pob7SMRvcDzv8lKi0i6fxUta2BC7lv6jwFr4Z5ybpiPGWYXHqd815
1AtrVYufY3w+r/c9+fgC6nFt99lyGN8Ng99/aieyRHjfH4VT9D79+c6b8+EW
k/+8HDA/jm21Ecm+iPj1SFVGBPPnaLPm7StJqFeMtZYkwnuzKtOWX8bzeJfi
IYL51hS2LeEevK3ogDu9LyNKjg0vScb4Cv3RY4L5u5fJt/uQinxu06H8Cvm9
YI4G19x0loyJPt+/C/X9087nfy7AbkkH4wbgggLbPvHriP9LAt4KoT/I2xXY
rHCDJcO+PXO2IN6czsrNNs5A/t7z6ctz5PPNJmo7w+4gP96KbeBC/Lor+sya
Jwvjp1ksfD0s1G9tHANn1Ox4UwjLXfBXu3yXJdqTkba0n8nzmrZC+h76g6h4
G7pfWWldnPgtWDn95ikaL4W77s8syMbn+zD+ehV8ukB/at19llyv7eGg+5v+
nKoffg4Hflm8YRvi8SfVgbaGB+g/lCSEj8HBM8Ib7XNQnzn7D9P1+UXNc6o/
w0H3urPG4Ykw5by+XJYszz4RIEHzvU3p7aCHiM+DqhL6NB/Lbb7yD74gJpXu
RPP9eFvCsTyW8PjOGf8PVn/tG82Xz5JwgRmi9L7A5CtT4XEwbxeZovu/TQNj
GZECliQk86fQfl7CRMInDXYd6h9oge+I3nOWK2RJWuLH3/Q+wQ3967bdhXce
KL1O+1mO8tebVj9CPXPZ9h8f8uepC44GxTD3uMmY8P/7315NgyL8vHXi8fS8
mrruoVUvYSnHWbXLYOc5gjJWxYj/MWdvrICHviSLvIejmEUiK+H7+Yqzd5Xg
31/lYyIP/02zmmyBy1Tmu9L3635RgT32j1FfcWrslYJfB1xseQ8bGA7uou8P
6hxLqrc+Qf2uGmxA18t/bPz86C1s5XxoEX3f8FWJ+5Z1Kfoz7q4OWt88X7ji
Yh3cP+x2g34/zlOOTREWTzEeJStdPsBiP/yYGjgpy1Ccvp9Paoh3Ny1jycYi
0+ZsuKO4wLYSDpzllko/7603Wgw3PGPJufhpQfT+fMMzHOrl8C/Jdhe6v/5B
sIz0+nLkr4bsBLrenmvqzbnuOUtSiOtP+v2PCWpn+ovgcb9H/l8xHspFc9u0
XmB+8lxaQ++LluwbL1ldgXr+q+HJANj/g0RWDnzqb7Ai3X8/87nBZZVK9LM8
hen0/h2RC6dCFKvw3+8sOv0cDj10z/M2/Djk6xg9b6rr0bBtxUuWfFa4H6oK
a2guWbOsmiV2dxYmONDvr/h0a0j0Feql3ivvpeh9mBWvOy7BCxWUp9Hvx7yc
PVi/6DVLZFP2En/4U5h2tlAtxrvTyPAQ6gNRuZfe/PUYn7Y5+e+Q/594d3eN
v2VJ7o2eWVawxzaBxuBGllxbPiH0EvNdyEClfBRmrvp+LEJ8UFoYfHWoCfnS
6FMl/f4Oq0LeXT/fI968alx+DvGFi2v5++YWlsz42znCC69wqfD2aEU95fet
JwzxqLzMnXMYDuxJG2YQr0KPXpcXaGNJ9skBm1H0K0lfDJ9chO033jwUTL9f
zLBzi2w7+uWrOeUnEP80pkv/p/eZJQUPo1fMgz2cy+bWwLv7tbrTEC/nl+2+
sa0D+f184Fgl4uvp8LTa/V9QHxfsjHaGE77ouU7ChwsiJqYQj80M28aiOvHz
FP3opef7DnKJS6V3of7foXSrH/H7rEtJnvJXluhM7b+XAm8s3WFWAvOn7ROx
gh9ITLSZfEO90Bz9j4eu74clBTTBZ4I4fZ8hX1S1a890+Y7xuv3vyaNwhH5z
ch+8MGv3bmN44mqwamg3fr+H+jPnwQPTRCp4f2B8xTpHtCM/bXMucDgPy4tl
jOTAEmV2/ZI/WbL0iYBDNDwiOXrsLlytd+CZJz3/FZ4gsvYX8vvW82vN6Z/v
WH23Arbzm/9Kjb6fXt+43qYH8VNYKHQpvOJqwLt2eFsvMZ0HN3MKefv0Yn7I
rDKYCT/ancPxF07Rc/TkhmOfWp8/0Yf5+6y8hObn65KDK+b30/52uh79fuSy
8LOPU+Gizy++LoKvfFbeojCA/+4tk7WC1j/6dd8K4LD25Rf0YK8rvqFGg/h9
V6ak2tPfl3P23DdwWlbPwxDYdPfd645DyBcCEo2p8Nqnm7R/wvs6ZvbRekpB
suc1M4z4J+04RvO5eHi0C9dvjIcd9h0K9P3755VjZ+CqBMHL9P6bafrV0WIj
qB+yK3S64C6OWXkaoyxZf7Pnz0o8vyanTNNncC0f0WLgylLjNssxlmyoKulc
jPFxJ+wkr+cffD5iYmIH4JR22eTf8J49qwNq4VjyQuXIX9QrU/sE4zHe/Dm4
HZLGWTLNWUxogt4v4ZTeJzeB/m9Zw1MPjNetpQbHcuGu6poYE4xnrbAjWa/+
YT5x/NvzBJZvl1xvP4l6qdPeWRPzQZQ8bfoK39j9ziYXFkxz2ntgCv1EiOdi
Ncynqf//jyX/AwITAOQ=
     "]]}},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.996, 300.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"ScalingFunctions" -> None},
  PlotRange->{{0.9961664801423478, 1.001655562478413}, {300.0000000000005, 
   399.99999999999994`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6331428974396505`*^9, {3.633142939597062*^9, 3.633143015231388*^9}}]
}, Open  ]]
},
WindowSize->{944, 982},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 435, 11, 72, "Input"],
Cell[996, 33, 205, 5, 52, "Input"],
Cell[CellGroupData[{
Cell[1226, 42, 2201, 48, 52, "Input"],
Cell[3430, 92, 38357, 692, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41824, 789, 865, 21, 31, "Input"],
Cell[42692, 812, 612, 13, 21, "Message"],
Cell[43307, 827, 612, 13, 21, "Message"],
Cell[43922, 842, 458, 10, 21, "Message"],
Cell[44383, 854, 626, 12, 21, "Message"],
Cell[45012, 868, 626, 12, 21, "Message"],
Cell[45641, 882, 460, 10, 21, "Message"],
Cell[46104, 894, 626, 12, 21, "Message"],
Cell[46733, 908, 591, 12, 21, "Message"],
Cell[47327, 922, 458, 10, 21, "Message"],
Cell[47788, 934, 600, 12, 21, "Message"],
Cell[48391, 948, 614, 13, 21, "Message"],
Cell[49008, 963, 589, 12, 21, "Message"],
Cell[49600, 977, 38753, 645, 228, "Output"]
}, Open  ]],
Cell[88368, 1625, 226, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[88619, 1634, 841, 21, 72, "Input"],
Cell[89463, 1657, 38498, 643, 370, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
